# Generated by Django 3.2.9 on 2023-03-23 22:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GitlabRepositoryBaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo_base_url', models.URLField(max_length=255, unique=True, verbose_name='Базовая ссылка на URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Gitlab. Сервисы',
                'verbose_name_plural': 'Gitlab. Сервисы',
                'db_table': 'gitlab_services',
                'ordering': ['created_at', 'updated_at'],
            },
        ),
        migrations.CreateModel(
            name='GitlabRepositoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_id', models.BigIntegerField(blank=True, unique=True, verbose_name='ID репозитория в Gitlab')),
                ('target_ref', models.TextField(default='master', max_length=64, verbose_name='Ветка для запуска пайплайна')),
                ('repo_name', models.TextField(max_length=128, verbose_name='Наименование проекта')),
                ('description', models.TextField(max_length=64, null=True, verbose_name='Описание репозитория')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен ли репозиторий')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата обновления')),
                ('repository_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gitlab.gitlabrepositorybasemodel', verbose_name='Базовый репозиторий')),
            ],
            options={
                'verbose_name': 'Gitlab. Репозитории',
                'verbose_name_plural': 'Gitlab. Репозитории',
                'db_table': 'gitlab_repository',
                'ordering': ['created_at', 'updated_at'],
            },
        ),
        migrations.CreateModel(
            name='GitlabRepositoryTokensModel',
            fields=[
                ('gitlab_repository', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='gitlab.gitlabrepositorymodel', verbose_name='Gitlab Репозиторий')),
                ('trigger_token', models.TextField(max_length=64, verbose_name='Токен для доступа к Gitlab')),
                ('private_token', models.TextField(max_length=64, verbose_name='Приватный токен доступа к Gitlab')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Gitlab. Токены',
                'verbose_name_plural': 'Gitlab. Токены',
                'db_table': 'gitlab_repository_trigger_token',
            },
        ),
        migrations.CreateModel(
            name='GitlabRepositoryPipelineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pipeline_id', models.BigIntegerField(unique=True, verbose_name='ID пайплайна')),
                ('web_url', models.URLField(verbose_name='URL пайплайна')),
                ('source', models.JSONField(default=dict, verbose_name='Исходный ответ JSON от Gitlab')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата обновления')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gitlab.gitlabrepositorymodel', verbose_name='Репозиторий')),
            ],
            options={
                'verbose_name': 'Gitlab. Pipeline',
                'verbose_name_plural': 'Gitlab. Pipeline',
                'db_table': 'gitlab_repository_pipeline',
                'ordering': ['id', 'created_at', 'updated_at'],
            },
        ),
        migrations.CreateModel(
            name='GitlabRepositoryPipelineHistoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Дата обновления')),
                ('pipeline', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gitlab.gitlabrepositorypipelinemodel', verbose_name='Gitlab. Pipeline')),
            ],
            options={
                'verbose_name': 'Gitlab. История Pipelines',
                'verbose_name_plural': 'Gitlab. История Pipelines',
                'db_table': 'gitlab_repository_pipeline_history',
                'ordering': ['created_at', 'updated_at'],
            },
        ),
    ]
